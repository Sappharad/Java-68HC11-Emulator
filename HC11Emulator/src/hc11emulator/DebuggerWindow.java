/*
 * DebuggerWindow.java
 *
 * Created on May 2, 2006, 1:13 PM
 *
 * @author Paul Kratt
 */

package hc11emulator;

import java.io.File;
import java.io.FileNotFoundException;
import java.util.Scanner;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

public final class DebuggerWindow extends javax.swing.JFrame {
    fox11w board = new fox11w(); // Create a Fox11 board
    hc11_thread runner;
    debug_breakPtHandler bphandler;
    
    /** Creates new form DebuggerWindow */
    public DebuggerWindow() {
        initComponents();
        loadConfig();
        runner = new hc11_thread(board);
        runner.start();
        bphandler = new debug_breakPtHandler(this,board);
        runner.attachBPhandler(bphandler);
        tblDissasm.getColumnModel().getColumn(0).setMinWidth(70);
        tblDissasm.getColumnModel().getColumn(0).setMaxWidth(90);
        tblDissasm.getColumnModel().getColumn(0).setWidth(80);
        tblDissasm.getColumnModel().getColumn(1).setMinWidth(120);
        tblDissasm.getColumnModel().getColumn(1).setMaxWidth(200);
        tblDissasm.getColumnModel().getColumn(1).setWidth(150);
    }
    
    /** Update the displayed register values and stuff. **/
    public void updateDisplay(){
        //Update the display
        DefaultTableModel regs = (DefaultTableModel)tblRegisters.getModel();
        regs.setValueAt(Integer.toHexString(board.getA()),0,0);
        regs.setValueAt(Integer.toHexString(board.getB()),0,1);
        regs.setValueAt(Integer.toHexString(board.getX()),0,2);
        regs.setValueAt(Integer.toHexString(board.getY()),0,3);
        regs.setValueAt(Integer.toBinaryString(board.getIntCCR()),0,4);
        lblPC.setText(Integer.toHexString(board.getPC()));
        lblSP.setText(Integer.toHexString(board.getSP()));
    }
    
    /** Update the disassembly display, starting at the specified location */
    public void updateDisassembly(int location){
        int curloc = location;
        DefaultTableModel table = (DefaultTableModel)tblDissasm.getModel();
        Instruct_Container instruction;
        
        for(int i = 0; i<table.getRowCount();i++){
            instruction = board.dissassemble(curloc);
            table.setValueAt(Integer.toHexString(curloc),i,0);
            table.setValueAt(instruction.getInstruction(),i,1);
            table.setValueAt(instruction.getDescription(),i,2);
            curloc += instruction.getSize();
        }
    }
    
    /** Load config.ini if it exists. **/
    public void loadConfig(){
        File config = new File("config.ini");
        if(config.exists()){
            try {
                Scanner confRead = new Scanner(config);
                
                while(confRead.hasNextLine()){
                    String line = confRead.nextLine();
                    if(line.indexOf('=')>0){
                        String setting,value;
                        setting = line.substring(0,line.indexOf('='));
                        value = line.substring(line.indexOf('=')+1,line.length());
                        
                        //Perform the actual parameter check here
                        if(setting.equals("romfile")){
                            boolean result;
                            result = hc11_Helpers.loadBinary(new File(value.substring(value.indexOf(',')+1,value.length())),board,
                                    Integer.parseInt(value.substring(0,value.indexOf(',')),16));
                            if(result)
                                System.out.println("Loaded a rom file.");
                            else
                                System.out.println("Error loading rom file.");
                        }
                    }
                }
                confRead.close();
            } catch (FileNotFoundException ex) {
                ex.printStackTrace();
            }
        }
    }
    
    /** This is called by a breakpoint handler when it hit's a breakpoint. Updates the GUI so we know execution halted.
     *@param address The address to start disassembly at in the display window
     **/
    public void haltForBreakpoint(int address){
        lblStatus.setText("Breakpoint hit!");
        btnStop.setEnabled(false);
        btnRun.setEnabled(true);
        btnStep.setEnabled(true);
        updateDisplay();
        updateDisassembly(address);
    }
    
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        scrRegtable = new javax.swing.JScrollPane();
        tblRegisters = new javax.swing.JTable();
        jLabel2 = new javax.swing.JLabel();
        lblPC = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        lblSP = new javax.swing.JLabel();
        scrDistable = new javax.swing.JScrollPane();
        tblDissasm = new javax.swing.JTable();
        btnRun = new javax.swing.JButton();
        btnStep = new javax.swing.JButton();
        btnStop = new javax.swing.JButton();
        lblStatus = new javax.swing.JLabel();
        scrBreakTable = new javax.swing.JScrollPane();
        tblBreakPts = new javax.swing.JTable();
        lblBreakpts = new javax.swing.JLabel();
        btnRemove = new javax.swing.JButton();
        lblAddBrk = new javax.swing.JLabel();
        lblBrkType = new javax.swing.JLabel();
        cbxBreakType = new javax.swing.JComboBox();
        lblBrkAddr = new javax.swing.JLabel();
        txtBreakAddr = new javax.swing.JTextField();
        btnAdd = new javax.swing.JButton();
        mnuBar = new javax.swing.JMenuBar();
        mnuFile = new javax.swing.JMenu();
        mnuFileOpenELF = new javax.swing.JMenuItem();
        mnuFileOpenS19 = new javax.swing.JMenuItem();
        mnuFileSeparator = new javax.swing.JSeparator();
        mnuFileExit = new javax.swing.JMenuItem();
        mnuDebug = new javax.swing.JMenu();
        mnuDebugRWlog = new javax.swing.JMenuItem();
        mnuHardware = new javax.swing.JMenu();
        mnuHardwareLEDS = new javax.swing.JMenuItem();
        mnuHardwareLCD = new javax.swing.JMenuItem();
        mnuHardwareKeypad = new javax.swing.JMenuItem();
        mnuTools = new javax.swing.JMenu();
        mnuToolsConvert = new javax.swing.JMenuItem();
        mnuToolsSeparator = new javax.swing.JSeparator();
        mnuToolsConfigure = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("HC11 Debug and Disassembly");
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                formWindowClosing(evt);
            }
        });

        jLabel1.setText("Register States:");

        tblRegisters.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {"00", "00", "0000", "0000", "sxhinzvc"}
            },
            new String [] {
                "A", "B", "X", "Y", "CCR"
            }
        ));
        tblRegisters.setEnabled(false);
        scrRegtable.setViewportView(tblRegisters);

        jLabel2.setText("PC:");

        lblPC.setText("0000");

        jLabel4.setText("SP:");

        lblSP.setText("FFE0");

        scrDistable.addComponentListener(new java.awt.event.ComponentAdapter() {
            public void componentResized(java.awt.event.ComponentEvent evt) {
                scrDistableComponentResized(evt);
            }
        });

        tblDissasm.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {"", "", ""},
                {"", "", ""},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "Address", "Instruction", "Description"
            }
        ));
        scrDistable.setViewportView(tblDissasm);

        btnRun.setText("Run");
        btnRun.setEnabled(false);
        btnRun.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRunActionPerformed(evt);
            }
        });

        btnStep.setText("Step");
        btnStep.setEnabled(false);
        btnStep.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnStepActionPerformed(evt);
            }
        });

        btnStop.setText("Stop");
        btnStop.setEnabled(false);
        btnStop.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnStopActionPerformed(evt);
            }
        });

        lblStatus.setText("Ready");

        tblBreakPts.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Mode", "Address"
            }
        ));
        scrBreakTable.setViewportView(tblBreakPts);

        lblBreakpts.setText("Breakpoints:");

        btnRemove.setText("Remove");
        btnRemove.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRemoveActionPerformed(evt);
            }
        });

        lblAddBrk.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblAddBrk.setText("Add breakpoint:");

        lblBrkType.setText("Type:");

        cbxBreakType.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Execute", "Read", "Write" }));

        lblBrkAddr.setText("Address:");

        txtBreakAddr.setText("8400");

        btnAdd.setText("Add");
        btnAdd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddActionPerformed(evt);
            }
        });

        mnuFile.setText("File");

        mnuFileOpenELF.setText("Open ELF...");
        mnuFileOpenELF.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mnuFileOpenELFActionPerformed(evt);
            }
        });
        mnuFile.add(mnuFileOpenELF);

        mnuFileOpenS19.setText("Open S19...");
        mnuFileOpenS19.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mnuFileOpenS19ActionPerformed(evt);
            }
        });
        mnuFile.add(mnuFileOpenS19);
        mnuFile.add(mnuFileSeparator);

        mnuFileExit.setText("Exit");
        mnuFileExit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mnuFileExitActionPerformed(evt);
            }
        });
        mnuFile.add(mnuFileExit);

        mnuBar.add(mnuFile);

        mnuDebug.setText("Debugging");

        mnuDebugRWlog.setText("Add RAM write log");
        mnuDebugRWlog.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mnuDebugRWlogActionPerformed(evt);
            }
        });
        mnuDebug.add(mnuDebugRWlog);

        mnuBar.add(mnuDebug);

        mnuHardware.setText("Hardware");

        mnuHardwareLEDS.setText("Add LED's and Dip Switches");
        mnuHardwareLEDS.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mnuHardwareLEDSActionPerformed(evt);
            }
        });
        mnuHardware.add(mnuHardwareLEDS);

        mnuHardwareLCD.setText("Add LCD display");
        mnuHardwareLCD.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mnuHardwareLCDActionPerformed(evt);
            }
        });
        mnuHardware.add(mnuHardwareLCD);

        mnuHardwareKeypad.setText("Add Keypad");
        mnuHardwareKeypad.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mnuHardwareKeypadActionPerformed(evt);
            }
        });
        mnuHardware.add(mnuHardwareKeypad);

        mnuBar.add(mnuHardware);

        mnuTools.setText("Tools");

        mnuToolsConvert.setText("Convert hex dump to binary");
        mnuToolsConvert.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mnuToolsConvertActionPerformed(evt);
            }
        });
        mnuTools.add(mnuToolsConvert);
        mnuTools.add(mnuToolsSeparator);

        mnuToolsConfigure.setText("Configure...");
        mnuToolsConfigure.setEnabled(false);
        mnuTools.add(mnuToolsConfigure);

        mnuBar.add(mnuTools);

        setJMenuBar(mnuBar);

        org.jdesktop.layout.GroupLayout layout = new org.jdesktop.layout.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(layout.createSequentialGroup()
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(jLabel1)
                    .add(layout.createSequentialGroup()
                        .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.TRAILING)
                            .add(org.jdesktop.layout.GroupLayout.LEADING, scrRegtable, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 362, Short.MAX_VALUE)
                            .add(layout.createSequentialGroup()
                                .add(6, 6, 6)
                                .add(lblStatus)
                                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED, 103, Short.MAX_VALUE)
                                .add(btnRun)
                                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                                .add(btnStop)
                                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                                .add(btnStep))
                            .add(org.jdesktop.layout.GroupLayout.LEADING, scrDistable, 0, 0, Short.MAX_VALUE))
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                            .add(jLabel2)
                            .add(jLabel4)
                            .add(layout.createSequentialGroup()
                                .add(6, 6, 6)
                                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.TRAILING)
                                    .add(lblPC)
                                    .add(lblSP))))))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.TRAILING, false)
                    .add(org.jdesktop.layout.GroupLayout.LEADING, layout.createSequentialGroup()
                        .add(111, 111, 111)
                        .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.TRAILING)
                            .add(lblBreakpts)
                            .add(btnAdd)))
                    .add(org.jdesktop.layout.GroupLayout.LEADING, layout.createSequentialGroup()
                        .add(lblBrkType)
                        .add(20, 20, 20)
                        .add(cbxBreakType, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 133, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                    .add(org.jdesktop.layout.GroupLayout.LEADING, layout.createSequentialGroup()
                        .add(lblBrkAddr)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(txtBreakAddr))
                    .add(btnRemove)
                    .add(scrBreakTable, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 181, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(lblAddBrk, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(layout.createSequentialGroup()
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(layout.createSequentialGroup()
                        .add(scrDistable, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 184, Short.MAX_VALUE)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(jLabel1))
                    .add(layout.createSequentialGroup()
                        .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                            .add(lblBreakpts)
                            .add(jLabel2))
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                            .add(layout.createSequentialGroup()
                                .add(lblPC)
                                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                                .add(jLabel4)
                                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                                .add(lblSP))
                            .add(scrBreakTable, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 127, Short.MAX_VALUE))
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(btnRemove)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(lblAddBrk)))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(org.jdesktop.layout.GroupLayout.TRAILING, layout.createSequentialGroup()
                        .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                            .add(lblBrkType)
                            .add(cbxBreakType, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                            .add(lblBrkAddr)
                            .add(txtBreakAddr, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)))
                    .add(scrRegtable, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 58, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(btnStep)
                    .add(btnStop)
                    .add(btnRun)
                    .add(btnAdd)
                    .add(lblStatus))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnRemoveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRemoveActionPerformed
        DefaultTableModel table = (DefaultTableModel)tblBreakPts.getModel();
        int index = tblBreakPts.getSelectedRow();
        String type = (String)table.getValueAt(tblBreakPts.getSelectedRow(),0);
        int address = 0;
        try{
            address = Integer.parseInt((String)table.getValueAt(tblBreakPts.getSelectedRow(),1),16);
        }
        catch(Exception e){}
        
        if(index>=0 && type.equals("Exec")){
            bphandler.removebpx(address);
            table.removeRow(tblBreakPts.getSelectedRow());
        }
        else if(index>=0 && type.equals("Read")){
            bphandler.removebpr(address);
            table.removeRow(tblBreakPts.getSelectedRow());
        }
        else if(index>=0 && type.equals("Write")){
            bphandler.removebpw(address);
            table.removeRow(tblBreakPts.getSelectedRow());
        }
    }//GEN-LAST:event_btnRemoveActionPerformed

    private void btnAddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddActionPerformed
        int address = 0;
        String[] inserts = new String[2];
        DefaultTableModel table = (DefaultTableModel)tblBreakPts.getModel();
        
        try {    
            address = Integer.parseInt(txtBreakAddr.getText(),16);
        } catch (NumberFormatException ex) {}        
        
        if(address > 0 && address < 0x10000){
            if(cbxBreakType.getSelectedIndex()==0){ //Execute
                inserts[0] = new String("Exec");
                inserts[1] = Integer.toHexString(address);
                table.addRow(inserts);
                bphandler.addbpx(address);
            }
            else if(cbxBreakType.getSelectedIndex()==1){ //Read
                inserts[0] = new String("Read");
                inserts[1] = Integer.toHexString(address);
                table.addRow(inserts);
                bphandler.addbpr(address);
            }
            else if(cbxBreakType.getSelectedIndex()==2){ //Write
                inserts[0] = new String("Write");
                inserts[1] = Integer.toHexString(address);
                table.addRow(inserts);
                bphandler.addbpw(address);
            }
        }
    }//GEN-LAST:event_btnAddActionPerformed

    private void mnuHardwareKeypadActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mnuHardwareKeypadActionPerformed
        fox11_Keypad keypad = new fox11_Keypad(board);
        keypad.setVisible(true);
    }//GEN-LAST:event_mnuHardwareKeypadActionPerformed

    private void mnuHardwareLCDActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mnuHardwareLCDActionPerformed
        fox11_LCDscreen lcdDisp = new fox11_LCDscreen(board);
        lcdDisp.setVisible(true);
    }//GEN-LAST:event_mnuHardwareLCDActionPerformed

    private void mnuDebugRWlogActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mnuDebugRWlogActionPerformed
        JOptionPane msgbox = new JOptionPane();
        String trpaddr = msgbox.showInputDialog(this,"Enter the RAM address to trap: (in hexadecimal)");
        if(trpaddr != null && trpaddr.length() > 0){
            try{
                int traploc = Integer.parseInt(trpaddr,16);
                debug_ramlogFrame trapframe = new debug_ramlogFrame(traploc,board);
                trapframe.setVisible(true);
                board.addTrap(traploc,trapframe);
            }catch (Exception e){
                //Bad input
            }
        }
    }//GEN-LAST:event_mnuDebugRWlogActionPerformed

    private void mnuHardwareLEDSActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mnuHardwareLEDSActionPerformed
        fox11_LED_DIPSwin leds = new fox11_LED_DIPSwin(board);
        if(!board.hasObserver(leds)){
            leds.setVisible(true);
            board.addObserver(leds);
        }
        else{
            leds.dispose();
        }
    }//GEN-LAST:event_mnuHardwareLEDSActionPerformed

    private void mnuFileOpenS19ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mnuFileOpenS19ActionPerformed
        JFileChooser openbox = new JFileChooser();
        
        try{
            if(openbox.showOpenDialog(this) == openbox.APPROVE_OPTION){
                if(hc11_Helpers.loadS19(openbox.getSelectedFile(),board)){
                    updateDisassembly(board.getPC()); //File loaded successfully
                    btnStep.setEnabled(true);
                    btnRun.setEnabled(true);
                    btnStop.setEnabled(true);
                    lblPC.setText(Integer.toHexString(board.getPC()));
                }
            }
        }catch (Exception e){
            System.out.println("Unable to allow the user to select a file.");
            e.printStackTrace();
        }
    }//GEN-LAST:event_mnuFileOpenS19ActionPerformed

    private void formWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosing
        System.out.println("Window is closing!");
        runner.setNoquit(false);
    }//GEN-LAST:event_formWindowClosing

    private void btnStopActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnStopActionPerformed
        runner.setRunmode(false);
        updateDisplay();
        updateDisassembly(board.getPC());
        
        lblStatus.setText("Emulation paused.");
        btnStop.setEnabled(false);
        btnRun.setEnabled(true);
        btnStep.setEnabled(true);
    }//GEN-LAST:event_btnStopActionPerformed

    private void btnRunActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRunActionPerformed
        runner.setRunmode(true);
        btnRun.setEnabled(false);
        btnStop.setEnabled(true);
        btnStep.setEnabled(false);
        lblStatus.setText("Running...");
    }//GEN-LAST:event_btnRunActionPerformed

    private void mnuToolsConvertActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mnuToolsConvertActionPerformed
        DumpConversionWindow dumpwin = new DumpConversionWindow();
        dumpwin.setVisible(true);
    }//GEN-LAST:event_mnuToolsConvertActionPerformed

    private void mnuFileOpenELFActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mnuFileOpenELFActionPerformed
        JFileChooser openbox = new JFileChooser();
        
        try{
            if(openbox.showOpenDialog(this) == JFileChooser.APPROVE_OPTION){
                if(hc11_Helpers.loadElf(openbox.getSelectedFile(),board)){
                    updateDisassembly(board.getPC()); //File loaded successfully
                    btnStep.setEnabled(true);
                    btnRun.setEnabled(true);
                    btnStop.setEnabled(true);
                    lblPC.setText(Integer.toHexString(board.getPC()));
                }
            }
        }catch (Exception e){
            System.out.println("Unable to allow the user to select a file.");
            e.printStackTrace();
        }
    }//GEN-LAST:event_mnuFileOpenELFActionPerformed

    private void mnuFileExitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mnuFileExitActionPerformed
        runner.setNoquit(false); //Possible bug... Calling dispose() does not invoke WindowClosing on this window if others are open.
        //I should look into this...
        this.dispose();
        System.exit(0);
    }//GEN-LAST:event_mnuFileExitActionPerformed

    private void scrDistableComponentResized(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_scrDistableComponentResized
        int numrows = (int)(scrDistable.getSize().getHeight());
        DefaultTableModel table = (DefaultTableModel)tblDissasm.getModel();
        
        numrows -= (tblDissasm.getRowHeight() + tblDissasm.getRowHeight() + 8);
        //Accounts for table header size. It used to be 1.5x, but table headers
        //are HUGE in Windows Vista Beta 2, so the /2 on the second one is temporarily removed.
        //I pretty sure there isn't a way to retrieve the header size.
        numrows /= tblDissasm.getRowHeight();
        
        if(numrows >= 8){
            table.setRowCount(numrows);
            if(btnStep.isEnabled())
                updateDisassembly(board.getPC());
        }
    }//GEN-LAST:event_scrDistableComponentResized

    private void btnStepActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnStepActionPerformed
        board.execute();
        
        updateDisplay();
        updateDisassembly(board.getPC());
    }//GEN-LAST:event_btnStepActionPerformed
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAdd;
    private javax.swing.JButton btnRemove;
    private javax.swing.JButton btnRun;
    private javax.swing.JButton btnStep;
    private javax.swing.JButton btnStop;
    private javax.swing.JComboBox cbxBreakType;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel lblAddBrk;
    private javax.swing.JLabel lblBreakpts;
    private javax.swing.JLabel lblBrkAddr;
    private javax.swing.JLabel lblBrkType;
    private javax.swing.JLabel lblPC;
    private javax.swing.JLabel lblSP;
    private javax.swing.JLabel lblStatus;
    private javax.swing.JMenuBar mnuBar;
    private javax.swing.JMenu mnuDebug;
    private javax.swing.JMenuItem mnuDebugRWlog;
    private javax.swing.JMenu mnuFile;
    private javax.swing.JMenuItem mnuFileExit;
    private javax.swing.JMenuItem mnuFileOpenELF;
    private javax.swing.JMenuItem mnuFileOpenS19;
    private javax.swing.JSeparator mnuFileSeparator;
    private javax.swing.JMenu mnuHardware;
    private javax.swing.JMenuItem mnuHardwareKeypad;
    private javax.swing.JMenuItem mnuHardwareLCD;
    private javax.swing.JMenuItem mnuHardwareLEDS;
    private javax.swing.JMenu mnuTools;
    private javax.swing.JMenuItem mnuToolsConfigure;
    private javax.swing.JMenuItem mnuToolsConvert;
    private javax.swing.JSeparator mnuToolsSeparator;
    private javax.swing.JScrollPane scrBreakTable;
    private javax.swing.JScrollPane scrDistable;
    private javax.swing.JScrollPane scrRegtable;
    private javax.swing.JTable tblBreakPts;
    private javax.swing.JTable tblDissasm;
    private javax.swing.JTable tblRegisters;
    private javax.swing.JTextField txtBreakAddr;
    // End of variables declaration//GEN-END:variables
    
}
